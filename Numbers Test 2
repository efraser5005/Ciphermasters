import java.util.Random;
import java.util.Scanner;
import java.util.Timer;

public class TestNumbersGame{
   public static void main(String[] args){
   
   String[] names = {"Esther", "Emma"};
   
   Numbers(1, names);
   
   }
   
   public static int[] Numbers(int level, String[] names){
      System.out.println("This is where the numbers game will be played.");
      
      int[] gameScores = new int[names.length];
      
      int numSmall = 0, numLarge = 0;
      int[] larges = {25, 50, 75, 100};
      
      Random rnd = new Random();
      Scanner sc = new Scanner(System.in);
      
      //Sets number of small numbers by level
      if(level == 1){
         numSmall = 2;
      }
      else if(level == 2){
         numSmall = 3;
      }
      else if(level == 3){
         numSmall = 4;
      }
      else{
         System.out.println("Esther, you've screwed it up! The level is set to something other than 1, 2 or 3. How did that happen?");
      }
      
      int[] numbers = new int[6];
      
      System.out.print("The numbers are: ");
      
      //adds random ints less than 10 to the array "numbers" 
      for(int i = 0; i < numSmall; i++){
         numbers[i] = rnd.nextInt(9) + 1;
         System.out.print(numbers[i] + " ");
      }
      
      for(int i = numSmall; i < 6; i++){
         numbers[i] = larges[rnd.nextInt(4)];
         System.out.print(numbers[i] + " ");
      }
      
      //randomly generates operations to link the numbers and create target number
      int[] operations = new int[5];
      int target = 0;
      
      for(int i = 0; i < 5; i++){
         operations[i] = rnd.nextInt(4) + 1;
         if(operations[i] == 1){
            target += numbers[i];
            //System.out.println("The number is: " + numbers[i] + ". The operation is: + . The target is now: " + target);
         }
         else if(operations[i] == 2){
            if(target > numbers[i]){ //This ensures target stays positive
               target -= numbers[i];
               //System.out.println("The number is: " + numbers[i] + ". The operation is: - . The target is now: " + target);
            }
            else{
               target += numbers[i];
               //System.out.println("The number is: " + numbers[i] + ". The operation is: +. The target is now: " + target);
            }
         }
         else if(operations[i] == 3){
            if(level > 1){
               target = target * numbers[i];
               //System.out.println("The number is: " + numbers[i] + ". The operation is: * . The target is now: " + target);
            }
            else{
               target += numbers[i];
            }
         }
      }
      
      System.out.println("The target number is: " + target);
      
      System.out.println("Time's up!"); //This is in place of the timer method for now
      
      String[] answers = new String[names.length];
      
      //Collects the answers
      for(int i = 0; i < names.length; i++){
         System.out.print(names[i] + ", how did you crack the code? Please enter the arithmetical expression you used: ");
         answers[i] = sc.nextLine();
      }
      
      //Parses and evaluates the answers
      int[] ansOps = new int[19];
      int[] ansNums = new int[19];
      
      
      for(int i = 0; i < answers.length; i++){ //runs through the different players' answers
         int charPos = answers[i].length() - 1;
         while(charPos >= 0){ //for each player's answer, runs through their answer string backwards
            //The first three cases handle the operators, adding them to an array called ansOps         
            if(answers[i].charAt(charPos) == '+'){
               ansOps[answers[i].length() - charPos] = 1;
               charPos--;
            }
            else if(answers[i].charAt(charPos) == '-'){
               ansOps[answers[i].length() - charPos] = 2;
               charPos--;
            }
            else if(answers[i].charAt(charPos) == '*'){
               ansOps[answers[i].length() - charPos] = 3;
               charPos--;
            }
            //This case handles the numbers
            else if(Character.isDigit(answers[i].charAt(charPos))){
               int ansHunds = 0, ansTens = 0, ansUnits = 0;
               
               //These two nested "if"s handle the cases where the number is 2 or 3 digits long
               if(charPos > 0 && Character.isDigit(answers[i].charAt(charPos-1))){
                  
                  if(charPos > 1 && Character.isDigit(answers[i].charAt(charPos-2))){
                     ansHunds = Character.getNumericValue(answers[i].charAt(charPos-2));
                  }
                  
                  ansTens = Character.getNumericValue(answers[i].charAt(charPos-1));
               }
               
               ansUnits = Character.getNumericValue(answers[i].charAt(charPos));
                              
               ansNums[charPos] = ansHunds * 100 + ansTens * 10 + ansUnits;
               //System.out.println("ansHunds = " + ansHunds + ", ansTens = " + ansTens + ", ansUnits = " + ansUnits + ", ansNums["+charPos+"] = " + ansNums[charPos]);
               //These "if"s move the charPos to avoid double-counting 2- and 3- digit numbers
               if(ansHunds != 0){
                  charPos -= 3;
               }
               else if(ansTens != 0){
                  charPos -= 2;
               }
               else{
                  charPos--;
               }
               
               ansHunds = 0; ansTens = 0;
            }
            //This handles the case where something other than a number of valid operator has been entered. It prompts the user to re-enter their answer. 
            else{
               System.out.print("Error: " + names[i] + " " + answers[i].charAt(charPos) + " is an invalid character. Remember not to put any spaces! Try entering it again: ");
               answers[i] = sc.nextLine();
            }
         
         
         
         
         //This consolidates the ansNums and ansOps arrays into something easier to work with
         int[] ansNumsNZ = new int[6];
         int[] ansOpsNZ = new int[5]; 
         int k = 0, n = 0;
         //This consolidates the ansNums array
         for(k = 0; k<6; k++){
         for(int l = 0; l < 19; l++){
            System.out.println("Is this the problem?");
            if(ansNums[l] != 0){
               ansNumsNZ[k] = ansNums[l];
               System.out.print(ansNumsNZ[k]+ " ");
               k++;
               }
            }
         }
         
         
         
         
         //This consolidates the ansOps array
         for(int m = 0; m < 19; m++){
            while(n<5){
            System.out.println(ansOps[m]);
               if(ansOps[m] != 0){
                  ansOpsNZ[n] = ansOps[m];
                  n++;
               }
            }
         }
         
         System.out.print("The ansNumsNZ array contains the numbers ");
         for(int r = 0; r < 6; r++){
            System.out.print(ansNumsNZ[r] + " ");
         }
         System.out.println();
         
         System.out.print("The ansOpsNZ array contains the operations ");
         for(int s = 0; s < 5; s++){
            System.out.print(ansOpsNZ[s] + " ");
         }
         System.out.println();
         
         /*
         //This adds the user's answer
         int ansCheck = ansNumsNZ[0];
         System.out.println("The player's answer begins at " + ansCheck);
         
         for(int j = 4; j >= 0; j--){
            if(ansOpsNZ[j] == '+'){
               ansCheck += ansNumsNZ[(j+1)];
               System.out.println(ansNumsNZ[j+1] + " has been added to the player's number. The player's answer is now: " + ansCheck);
            }
            else if(ansOpsNZ[j] == '-'){
               ansCheck -= ansNums[(j+1)];
               System.out.println(ansNumsNZ[j+1] + " has been subtracted from the player's number. The player's answer is now: " + ansCheck);
            }
            else if(ansOpsNZ[j] == '*'){
               ansCheck = ansCheck * ansNums[(j+1)];
            }
         }
         
         
         //checks is ansCheck is the same as target number and scores accordingly
         if(ansCheck == target){
            gameScores[i] += answers.length - 1;
            System.out.println(names[i] + ", you did it!");
         }
         else if(ansCheck > target - 10 || ansCheck < target + 10){
            gameScores[i] += (answers.length - 1)/2;
            System.out.println("Good try, " + names[i] + ". You get partial points.");
         }
         */
         }      
      }//closes for answers array loop
      
      return gameScores;
      
   }//end Numbers method
   
   /*
   public static void Timer(String game, int level){
      int playtime = 0;
      int[] letlev = {60, 45, 30};
      int[] numblev = {70, 60, 50, 40, 30};
      Timer timer = new Timer();
      Instant start = 0;
      Instant end = 0;
      
      if(game.equals("letters")){
         end = start.plus(Duration.ofSeconds(letlev[(level - 1) % 3]));
      }
      else if(game.equals("numbers")){
         end = start.plus(Duration.ofSeconds(numblev[(level - 1) % 3]));
      }
      
      for(int i = 0; i < end; i++){
         System.out.println(i);
      }
   }
   */   
      
   
}//end class TestWhatever
